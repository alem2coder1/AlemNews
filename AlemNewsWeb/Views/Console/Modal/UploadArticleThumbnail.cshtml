@{
    Layout = null;
}
<div id="qar-modal-content" class="upload-article-thumbnail-modal">
    <div class="modal-header pb-0">
        <ul class="nav nav-tabs border-bottom-0" id="upload-article-thumnail-tab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active text-uppercase" id="upload-image-tab" data-bs-toggle="tab"
                    href="#upload-image" role="tab" aria-controls="upload-image"
                    aria-selected="true">@T("ls_Uploadimage")</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-uppercase" id="choose-image-tab" data-bs-toggle="tab" href="#choose-image"
                    role="tab" aria-controls="choose-image" aria-selected="false">@T("ls_Chooseaimage")</a>
            </li>
        </ul>
        <button type="button" class="btn-close mb-2" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    <div class="tab-content" id="upload-article-thumnail-tabContent">
        <div class="tab-pane fade show active" id="upload-image" role="tabpanel" aria-labelledby="upload-image-tab">
            <form action="/@CurrentLanguage/Modal/UploadThumbnail" method="post" enctype="multipart/form-data"
                id="upload-thumbnail">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12">
                            <input type="file" class="d-none" id="fileThumbnail" name="fileThumbnail"
                                accept="image/*" />
                            <input type="hidden" name="aspectRatio" value="@ViewData["ratio"]" />
                            <button type="button" id="btnChooseFile" class="btn btn-light mb-3" for="fileThumbnail">
                                @T("ls_Chooseaimage")
                            </button>
                        </div>
                    </div>
                    <div class="cropper-img-container thumbnail">
                        <img id="thumbnailPreview" class="d-none" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@T("ls_Close")</button>
                    <button type="submit" class="btn btn-primary"
                        data-loading-text="@T("ls_Loading")">@T("ls_Upload")</button>
                </div>
            </form>
        </div>
        <div class="tab-pane fade" id="choose-image" role="tabpanel" aria-labelledby="choose-image-tab">
            <div class="modal-body">
                <table id="qar-article-table" class="table table-striped table-bordered nowrap">
                    <thead>
                        <tr>
                            <th>@T("ls_Title")</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<script data-modal="qar">
    function useThumbnail(thumbnailUrl, copyright) {
        thumbnailUrl = decodeURIComponent(thumbnailUrl ? thumbnailUrl : '');
        copyright = decodeURIComponent(copyright ? copyright : '');
        if (document.querySelector('#thumbnailImage')) {
            document.querySelector('#thumbnailImage').setAttribute('src', thumbnailUrl);
        }
        if (document.querySelector('#thumbnailUrl')) {
            document.querySelector('#thumbnailUrl').value = thumbnailUrl;
        }
        if (document.querySelector('#thumbnailCopyright')) {
            document.querySelector('#thumbnailCopyright').value = copyright;
        }
        $qar.removeCustomModal();
    };
    function initUploadThumbnail() {
        let btnChooseFile = document.querySelector('#btnChooseFile'),
            fileThumbnail = document.querySelector('input#fileThumbnail'),
            thumbnailPreview = document.querySelector('#thumbnailPreview'),
            cropper = null;
        if (btnChooseFile) {
            btnChooseFile.addEventListener('click', function () {
                if (fileThumbnail) {
                    fileThumbnail.click();
                }
            });
        }
        fileThumbnail.addEventListener('change', function (event) {
            if (event.target.files && event.target.files[0]) {
                if (cropper !== null) {
                    cropper.destroy();
                    cropper = null;
                }
                const fileReader = new FileReader();
                fileReader.readAsDataURL(event.target.files[0]);
                fileReader.addEventListener("load", function (event) {
                    thumbnailPreview.classList.remove('d-none');
                    thumbnailPreview.setAttribute('src', this.result);
                    if (cropper == null) {
                        cropper = new Cropper(thumbnailPreview, {
                            aspectRatio: @ViewData["ratio"],
                            viewMode: 1,
                            ready: function () {
                                croppable = true;
                            },
                        });
                    }
                });
            }
        });

        document.querySelector('form#upload-thumbnail').addEventListener("submit", async function (event) {
            event.preventDefault();
            const form = this,
                button = form.querySelector('button[type="submit"]'),
                data = new FormData(form),
                url = form.getAttribute("action"),
                method = form.getAttribute("method");
            data.append('cropInfoStr', JSON.stringify(cropper.getData()));
            $qar.setBtnStatus(button, "loading");
            try {
                const res = await fetch(url, { method: method, body: data });
                const resData = await res.json();
                $qar.showMessage(resData["status"], resData["message"]);
                if (resData["data"]) {
                    useThumbnail(resData["data"], '');

                }
                $qar.setBtnStatus(button, "reset");
            } catch (err) {
                $qar.showMessage("error", err.message);
                $qar.setBtnStatus(button, "reset");
            }
        });

    }
    initUploadThumbnail();
</script>
<script>
    $(function () {
        const strTableId = "#qar-article-table";
        $(strTableId).dataTable({
            "dom": `<'row'<'col-6'l><'col-6'f>><'row dt-row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>`,
            "autoWidth": false,
            "destroy": true,
            "processing": true,
            "serverSide": true,
            "ajax": function (data, callback, setting) {
                $.ajax({
                    url: "/@CurrentLanguage/Catalog/GetArticleList",
                    type: "POST",
                    data: {
                        "keyword": data.search.value,
                        "start": data.start,
                        "length": data.length,
                        "orderList": data.order
                    },
                    success: function (data) {
                        const qData = data["data"],
                            result = {},
                            total = parseInt(qData["total"]);

                        result.data = total > 0 ? qData["dataList"] : [];
                        result.recordsFiltered = total;
                        result.recordsTotal = total;
                        callback(result);
                    }
                });
            },
            'order': [[0, 'desc']],
            "columns": [
                {
                    "data": null,
                    "orderable": true,
                    "bSortable": false,
                    "render": function (data, type, row) {
                        return `<div class="select-row-box row me-0">
                                    <div class="col-5">
                                        <img src="${row.thumbnailUrl}" style="width:160px;height:90px;" />&nbsp;&nbsp;
                                    </div>
                                    <div class="col-7 d-flex flex-column justify-content-between">
                                        <a class="ellipsis-title" href="${row.latynUrl}"> ${row.title} </a>
                                        <a class="btn btn-outline-success btn-sm" href="javascript:useThumbnail('${encodeURIComponent(row.thumbnailUrl)}','${encodeURIComponent(row.thumbnailCopyright)}')">
                                            <i class="fa-duotone fa-circle-check"></i> @T("ls_Use")
                                        </a>
                                    </div>
                                </div>`;
                    }
                }
            ],
            "oLanguage": $qar.getDataTableLanguage(),
            "preDrawCallback": function () {

            },
            "rowCallback": function (nRow) {

            },
            "drawCallback": function (oSettings) {
            }
        });

    });
</script>