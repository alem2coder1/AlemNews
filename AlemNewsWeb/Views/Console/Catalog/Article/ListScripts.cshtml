<script>
    $(function () {
        const strTableId = "#qar-table";

        $qar.currentDataTable = new DataTable(strTableId, {
            "dom": `<'row'<'col-6'l><'col-6'f>><'row dt-row'<'col-sm-12'tr>><'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>`,
            "autoWidth": true,
            "destroy": true,
            "processing": true,
            "serverSide": true,
            "ajax": function (data, callback, setting) {
                const dateTimeRange = document.querySelector("#date-time-result-value");
                $.ajax({
                    url: "/@CurrentLanguage/@ControllerName/Get@(ActionName)List",
                    type: "POST",
                    data: {
                        "keyword": data.search.value,
                        "start": data.start,
                        "length": data.length,
                        "orderList": data.order,
                        "dateTimeStart": dateTimeRange ? dateTimeRange.getAttribute("data-date-time-result-start") : "",
                        "dateTimeEnd": dateTimeRange ? dateTimeRange.getAttribute("data-date-time-result-end") : ""
                    },
                    success: function (data) {
                        const qData = data["data"],
                            result = {},
                            total = parseInt(qData["total"]);

                        result.data = total > 0 ? qData["dataList"] : [];
                        result.recordsFiltered = total;
                        result.recordsTotal = total;
                        callback(result);
                    }
                });
            },
            'order': [],
            "columns": [
                {
                    "data": null,
                    "orderable": false,
                    "width": "20px",
                    "bSortable": false,
                    "render": function (data, type, row) {
                        return `<div class="form-check abc-checkbox">
                                <input id="checkbox${row.id}" data-id="${row.id}" class="form-check-input datatable-checkbox" type="checkbox">
                                <label class="form-check-label" for="checkbox${row.id}"></label>
                            </div>`;
                    }
                },
                {
                    "data": null,
                    "orderable": false,
                    "bSortable": false,
                    "render": function (data, type, row) {
                        return `<div class="select-row-box d-flex align-items-center">
                                <img src="${row.thumbnailUrl}" style="min-width: 160px;width:160px;height:90px;" /> &nbsp;&nbsp;
                                <a class="reverse-hover ellipsis-title d-block" style="max-width: 340px; text-wrap: wrap;" href="${row.latynUrl}">
                                    ${row.title}
                                    ${row.qStatus == 3 ? `<span class="badge bg-light-warning rounded-pill"> @T("ls_Draft")</span>` : ""}
                                </a>
                            </div>`;
                    }
                },
                {
                    "data": null,
                    "orderable": false,
                    "bSortable": false,
                    "render": function (data, type, row) {
                        return `<div>
                                ${row.addAdmin ? `<h5> <span class="badge bg-light-success rounded-pill"><i class="fa-duotone fa-square-plus"></i> ${row.addAdmin}</span></h5>` : ""}
                                ${row.updateAdmin ? `<h5> <span class="badge bg-light-danger rounded-pill"><i class="fa-duotone fa-pen-to-square"></i> ${row.updateAdmin}</span></h5>` : ""}
                            </div>`;
                    }
                },
                {
                    "data": "viewCount",
                    "orderable": false
                },
                {
                    "data": null,
                    "orderable": false,
                    "bSortable": false,
                    "render": function (data, type, row) {
                        return `<div>${row.addTime} <br />
                                <span class="text-success ${row.autoPublishTime ? "" : "d-none"}">
                                <i class="fa-duotone fa-timer"></i> ${row.autoPublishTime}</span>
                            </div>`;
                    }
                }
    @if (CanEdit)
    {
        <text>
                        ,{
                            "data": null,
                        "orderable": false,
                        "width": "100px",
                        "bSortable": false,
                        "render": function (data, type, row) {
return `<div class="button-items">
                            <a class="btn btn-icon btn-outline-secondary" href="/@CurrentLanguage/@(ControllerName.ToLower())/@(ActionName.ToLower())/edit?id=${row.id}"><i class="fa-duotone fa-pen-to-square"></i></a>\
                        </div>`;
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
}
        </text>
    }],
            "oLanguage": $qar.getDataTableLanguage(),
            "preDrawCallback": function () {
            },
            "rowCallback": function (nRow) {
            },
            "drawCallback": function (oSettings) {
            }
        });
    });
</script>